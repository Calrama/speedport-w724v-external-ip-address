#!/bin/sh

CONF_FILE="/etc/speedport_w724v/device_password.conf"

# Load configuration file

if [ -f "$CONF_FILE" ]; then
	source "$CONF_FILE"
else
	>&2 echo "Error: Configuration file '$CONF_FILE' not found."
	exit 1
fi

# Check for device password

if [ -z "$PASSWORD_MD5" ]; then
	if [ -z "$PASSWORD_PLAIN" ]; then
		>&2 echo "Error: Configuration file '$CONF_FILE' must specify a device password."
		exit 1
	else
		>&2 echo "Warning: Device password specified in plain text. It will be replaced by its MD5 hash sum."
		PASSWORD_MD5=`printf "$PASSWORD_PLAIN" | md5sum | cut -d ' ' -f 1`
		PASSWORD_PLAIN=""
		
		if ! sed -i "s|^PASSWORD_PLAIN=.*\$|PASSWORD_MD5='$PASSWORD_MD5'|g" "$CONF_FILE" ; then
			>&2 echo "Error: Could not write to configuration file '$CONF_FILE'."
			exit 1
		fi
	fi
elif [ -n "$PASSWORD_PLAIN" ]; then
	>&2 echo "Warning: Device password specified in plain text. It will be deleted."
	if ! sed -i 's|^PASSWORD_PLAIN=.*$||g' "$CONF_FILE" ; then
		>&2 echo "Error: Could not write to configuration file '$CONF_FILE'."
		exit 1
	fi
fi

# Talk to the router

SESSION_COOKIE="/tmp/speedport_ip_session_cookie_$$.txt"
JSON_FILE="/tmp/speedport_ip_data_$$.json"
AUTH_URL='http://speedport.ip/data/Login.json'
INETIP_URL='http://speedport.ip/data/INetIP.json'

rm "$SESSION_COOKIE" "$JSON_FILE" 2>/dev/null

curl --silent --cookie-jar "$SESSION_COOKIE" --data "password=$PASSWORD_MD5&password_shadowed=$PASSWORD_MD5&showpw=0" "$AUTH_URL" > "$JSON_FILE"

# The router JSON response is sometimes not well formed, so we need to fix known
# bad formatting before feeding the JSON data to jq.
LOGIN_STATE=`cat "$JSON_FILE" | tr -d '\r\n' | sed 's|}[ \n\r]*,[ \n\r]*\]|}]|g' | jq '.[] | select(.varid == "loginstate").varvalue' | tr -d '"'`

if [ "$LOGIN_STATE" -ne 1 ]; then
	rm "$SESSION_COOKIE" "$JSON_FILE" 2>/dev/null
	>&2 echo "Error: Login failed."
	exit 1
fi

curl --silent --cookie "$SESSION_COOKIE" "$INETIP_URL" > "$JSON_FILE"

# Here is our external IP
PUBLIC_IPV4=`cat "$JSON_FILE" | tr -d '\r\n' | sed 's|}[ \n\r]*,[ \n\r]*\]|}]|g' | jq '.[] | select(.varid == "public_ip_v4").varvalue' | tr -d '"'`

# Clean up

curl --silent --cookie "$SESSION_COOKIE" --data 'logout=byby' "$AUTH_URL" > /dev/null

rm "$SESSION_COOKIE" "$JSON_FILE"

# Done

echo "$PUBLIC_IPV4"
